buildscript {
    ext {
        springBootVersion = '2.6.3'
    }
}

plugins {
    id 'org.springframework.boot' version "$springBootVersion"
    id 'java'
}

group = 'aminadav.com'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion")

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test')

//	excluded slf4j to not have 2 in the classpath
    implementation("technology.tabula:tabula:1.+", { exclude group: 'org.slf4j', module: 'slf4j-simple' })
    implementation("org.apache.poi:poi-ooxml:5.+")
}

test {
    useJUnitPlatform()
}

tasks.register('cleanImage') {
    doLast {
        exec {
            executable "docker"
            args "stop", "$CONTAINER"
        }
        exec {
            executable "docker"
            args "rm", "-f", "-v", "$CONTAINER"
        }
        exec {
            executable "docker"
            args "rmi", "-f", "$IMAGE"
        }
    }
}

tasks.register('buildImage') {
    doLast {
        exec {
            executable "docker"
            args "build", "-t", "$IMAGE", "--build-arg", "port=$SERVER_PORT",
                    "--build-arg", "version=$version",
                    "--build-arg", "project=$rootProject.name",
                    "--build-arg", "jarfile=app", "."
        }
    }
}

tasks.register('runImage') {
    doLast {
        exec {
            executable "docker"
            args "run", "--name", "$CONTAINER", "-p", "$SERVER_PORT:$SERVER_PORT", "$IMAGE"
        }
    }
}